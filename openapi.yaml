openapi: 3.0.0
info:
  title: Coin Craze API
  description: API documentation for the Coin Craze app.
  version: 1.0.0
servers:
  - url: https://coincrazebackend-production.up.railway.app
    description: Production Base URL  
paths:
  /signup:
    post:
      summary: Sign up a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
              required: [email, phoneNumber, password]
      responses:
        '201':
          description: User created successfully
        '400':
          description: Email already exists

  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid email or password

  /submit-kyc:
    post:
      summary: Submit KYC information
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userId:
                  type: string
                personalInfo:
                  type: string
                idProof:
                  type: string
                bankDetails:
                  type: string
                frontImage:
                  type: string
                  format: binary
                backImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: KYC submitted successfully

  /upload-profile-picture:
    post:
      summary: Upload profile picture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userId:
                  type: string
                profilePicture:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture uploaded

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User created

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
        '404':
          description: User not found
